#!/usr/bin/env bash

# From https://sanctum.geek.nz/cgit/syntax-checking-git-hooks.git/tree/pre-commit
# Start counting errors
declare -i errors

# Read records supplied by git diff-index, null-terminated; we only want the
# sha1 object name of the staged file
while read -r -d '' _ _ _ sha1 _ ; do
    # git diff-files has a NULL both before and after the filename it prints,
    # so we need to run read again to get the filename out to move on to the
    # next record (this is a bit weird, but at least it works)
    read -r -d '' filename _

    # Skip the sha1 if it's empty (which is how diff-index shows deleted files
    # or moves)
    if [[ $sha1 != *[^0]* ]] ; then
        continue
    fi

    # Check shell script syntax
    if [[ $filename == *.sh ]] || \
    git cat-file -p "$sha1" | file - | grep -iq 'POSIX shell' ; then
        printf 'Syntax check modified %s ... \n' "$filename"

        # Check the file with sh -n
        if ! git cat-file -p "$sha1" | sh -n ; then
            ((errors++))
            continue
        fi
    fi

    # Check PHP syntax
    if [[ $filename == *.php ]] || \
    git cat-file -p "$sha1" | file - | grep -iq php ; then
        printf 'PHP lint modified %s \n' "$filename"

        # Check the file with php -l
		if ! php -l "$filename"; then
            ((errors++))
            continue
        fi
    fi

# Standard input for the while loop is here
done < <(git diff-index -z --cached HEAD)

echo "Running phpcs via docker-compose..."
if ! docker-compose config --services | grep -q '^php-qa$'; then
    echo "php-qa service not found in docker-compose. Skipping phpcs check."
elif ! docker-compose run --rm php-qa phpcs; then
    echo "phpcs failed. Please fix code style issues before committing. Hint: docker-compose run --rm php-qa phpcbf"
    exit 1
fi

# Exit 0 if there were no errors, 1 if there were
exit "$((errors > 0))"

# Check for junk
# From https://github.com/greg0ire/git_template/blob/master/template/hooks/junkchecker/pre-commit
. "$PWD/.git/hooks/git_config_wrapper.sh"
get_hook_config junkchecker phrasesfile junkchecker_phrases_file required
if [ -f "$junkchecker_phrases_file" ]
then
	if git-rev-parse --verify HEAD >/dev/null 2>&1; then
		against=HEAD
	else
		against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
	fi

	for FILE in $(git diff-index --cached --name-status $against -- | cut -c 3-); do
		if [ -f "$FILE" ]
		then
			while IFS='' read -r line || [[ -n "$line" ]];
			do
				git diff --cached --diff-filter=ACMR "$FILE" | grep -E '^\+' | grep --quiet "$line"
				if [ $? -eq 0 ]
				then
					cat <<- EOT >&2
					Junk checker detected: $FILE contains '$line'.
					Use the --no-verify option to bypass this error message.
					EOT
					exit 1
				fi
			done < "$junkchecker_phrases_file"
		fi
	done
else
	echo "Could not find file $junkchecker_phrases_file . Please check your configuration."
	exit 2
fi
